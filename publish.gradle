task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}


javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
    }

    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            // groupId,artifactId,version，如果不定义，则会按照以上默认值执行
            // groupId 必须于maven repo申请的group Id一致
            groupId GROUP
			
			afterEvaluate {
				artifactId project.archivesBaseName
			}

			artifact sourcesJar
            artifact javadocJar

			pom {
                name = artifactId
                description = project.description
                url = POM_URL
                // 许可证
                licenses {
                    license {
                        name = POM_LICENCE_NAME
                        url = POM_LICENCE_URL
                    }
                }
                // 开发者信息
                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                        email = POM_DEVELOPER_EMAIL
                    }
                }
                // 版本控制仓库地址
                scm {
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                    url = POM_SCM_URL
                }
            }		        		
        }
    }
    // 定义发布到哪里
	repositories {
        maven {
           url = ARTIFACTORY_CONTEXTURL
            // 这里就是之前在issues.sonatype.org注册的账号
            credentials {
                username ARTIFACTORY_USER
                password ARTIFACTORY_PASSWORD
           }
        }
        // 本地私服
        maven {
            name "local"
            url = LOCAL_ARTIFACTORY_CONTEXTURL
            allowInsecureProtocol = true
            credentials {
                username LOCAL_ARTIFACTORY_USER
                password LOCAL_ARTIFACTORY_PASSWORD
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
//    sign configurations.archives
}