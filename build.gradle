plugins {
   id "com.jfrog.bintray" version "${jfrog_ver}"
   id "io.spring.dependency-management" version "${spring_dep}"
   id 'org.springframework.boot' version "${spring_boot_ver}"
   id "name.remal.check-updates" version "${cdu}"
}

bintrayUpload.enabled = false

ext {
    lib = ["boot" : "org.springframework.boot:spring-boot-dependencies:${spring_boot_ver}",
           "p6spy" : "p6spy:p6spy:${p6spy}",
           "flyway" : "org.flywaydb:flyway-core:${flyway}",
           "mysql" : "mysql:mysql-connector-java:${mysql}",
           // oracle
           "oracle" : "com.oracle.database.jdbc:ojdbc10:${oracle}",
           "orai18n": "cn.easyproject:orai18n:${orai18n}",
           "jaxb_api" : "javax.xml.bind:jaxb-api:${jaxb_api}",
           "truelicense" : "de.schlichtherle.truelicense:truelicense-core:${truelicense}",
           "jasypt" : "com.github.ulisesbocchio:jasypt-spring-boot-starter:${jasypt}",
           "validation" : "org.springframework.boot:spring-boot-starter-validation",
           "json" : "org.springframework.boot:spring-boot-starter-json",
            "jsr310" : "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jsr310}",
           // lombok
           "lombok" : "org.projectlombok:lombok:${lombok}",
            // cache
           "caffeine" : "com.github.ben-manes.caffeine:caffeine:${caffeine}",
           "redis" : "org.springframework.boot:spring-boot-starter-data-redis",
           "cache" : "org.springframework.boot:spring-boot-starter-cache",
           // AOP
           "aop" : "org.springframework.boot:spring-boot-starter-aop",
           "jdbc" : "org.springframework.boot:spring-boot-starter-jdbc",
           // security
           "security" : "org.springframework.boot:spring-boot-starter-security",
           // web
           "web" : "org.springframework.boot:spring-boot-starter-web",
           "undertow" : "org.springframework.boot:spring-boot-starter-undertow",
            // test
           "test" : "org.springframework.boot:spring-boot-starter-test",
           "securityTest" : "org.springframework.security:spring-security-test:${securityTest}",
            // jpa
           "jpa" : "org.springframework.boot:spring-boot-starter-data-jpa",
           // hutool
           "hutool" : "cn.hutool:hutool-all:${hutool}",
           // mybatis
           "mybatisPlus" : "com.baomidou:mybatis-plus-boot-starter:${mybatis_plus_starter}",
           // swagger
           "knife4j_spring" : "com.github.xiaoymin:knife4j-spring:${knife4j}",
           "knife4j_ui" : "com.github.xiaoymin:knife4j-spring-ui:${knife4j}",
            // jwt
           "jwt": "com.nimbusds:nimbus-jose-jwt:${jwt}",
            // wxjava
           "wxmp" : "com.github.binarywang:weixin-java-mp:${weixin}",
           "wxpay" : "com.github.binarywang:weixin-java-pay:${weixin}",
            // ali
           "alipay" : "com.alipay.sdk:alipay-sdk-java:${alipay}",
           "zxing" : "com.google.zxing:core:${zxing}",
            // bootAdmin
           "bootAdminServer" : "de.codecentric:spring-boot-admin-starter-server:${boot_admin}",
           "bootAdmin" : "de.codecentric:spring-boot-admin-starter-client:${boot_admin}",
           "devTools" : "org.springframework.boot:spring-boot-devtools",
            // generator
           "velocity" : "org.apache.velocity:velocity-engine-core:${velocity}",
           "mybatis_plus_generator" : "com.baomidou:mybatis-plus-generator:${mybatis_plus_generator}",
           "snakeyaml" : "org.yaml:snakeyaml:${snakeyaml}"
    ]
}

allprojects {
    apply plugin: "idea"
    group = 'io.nerv'
    version = '2.6.9'
}

subprojects {
    apply plugin: 'java-library'
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.bintray'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "name.remal.check-updates"

	sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    dependencyManagement {
        imports {
            mavenBom "${lib.boot}"
        }
    }
    
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
	
	tasks.withType(Javadoc) {
        options.encoding = "UTF-8"
		options.addStringOption('Xdoclint:none', '-quiet')
    }

    repositories {
        mavenLocal()
//        allowInsecureProtocol = true
        maven { url"https://maven.aliyun.com/repository/central" }
        maven { url"https://maven.aliyun.com/repository/jcenter" }
        maven { url"https://mirrors.huaweicloud.com" }
        maven { url"https://maven.aliyun.com/repository/spring" }
        maven { url"https://maven.aliyun.com/repository/spring-plugin" }
		maven { url"https://maven.springframework.org"}
        maven { url"https://repo.spring.io/libs-release" }

        mavenCentral()
    }

    dependencies {
       implementation "${lib.snakeyaml}"
       implementation "${lib.lombok}"
	   annotationProcessor "${lib.lombok}"

       testImplementation "${lib.test}",
                          "${lib.securityTest}"

     }
}

