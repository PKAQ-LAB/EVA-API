plugins {
   id "io.spring.dependency-management" version "${spring_dep}"
   id 'org.springframework.boot' version "${spring_boot_ver}"
}

ext {
    lib = [ "eva_core_common": "org.pkaq:eva-core-common:${eva}",
            "eva_web_common": "org.pkaq:eva-web-common:${eva}",
            "eva_core_cache": "org.pkaq:eva-core-cache:${eva}",
            "eva_core_data_mybatis": "org.pkaq:eva-core-data-mybatis:${eva}",
            "eva_web_sys": "org.pkaq:eva-web-sys:${eva}",
            "hutool" : "cn.hutool:hutool-all:${hutool}",
            "boot" : "org.springframework.boot:spring-boot-dependencies:${spring_boot_ver}",
            // lombok
            "lombok" : "org.projectlombok:lombok:${lombok}",
            // test
            "test" : "org.springframework.boot:spring-boot-starter-test",
            "boot_web": "org.springframework.boot:spring-boot-starter-web",
            "jdbc" : "org.springframework.boot:spring-boot-starter-jdbc",
            "mysql" : "mysql:mysql-connector-java:${mysql}",
            // web
            "web" : "org.springframework.boot:spring-boot-starter-web",
            "undertow" : "org.springframework.boot:spring-boot-starter-undertow",
            // spring cloud
            "cloud": "org.springframework.cloud:spring-cloud-dependencies:${cloud}",
            "cloud_bootstrap": "org.springframework.cloud:spring-cloud-starter-bootstrap:${bootstrap}",
            "alibaba":"com.alibaba.cloud:spring-cloud-alibaba-dependencies:${alibaba}",
            // nacos 注册 配置中心
            "nacos_config":"com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config",
            "nacos_client":"com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery",
            // 服务调用
            /**
             * 这里解释一下为什么不用 Spring-Cloud-Alibaba 的 Dubbo 依赖
             * 这个依赖主要是负责处理兼容 Feign 的 Dubbo 代理配置 通过 Feign 做服务发现
             项目中 如果统一使用 Dubbo 则不需要使用这个依赖 在后续版本 官方也宣布此模块从主分支移除
             况且 Dubbo 3.0 已经支持 基于应用服务的发现机制 故完全没必要与 Feign 做兼容处理
             */
            "dubbo":"org.apache.dubbo:dubbo-spring-boot-starter:${dubbo}",
            // 自带得依赖过低会导致启动报错
            "dubbo_client": "com.alibaba.nacos:nacos-client:${dubbo_client}",
            // 熔断 降级
            "sentinel":"com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel",
            // bootAdmin 监控
            "bootAdminServer" : "de.codecentric:spring-boot-admin-starter-server:${boot_admin}",
            "bootAdmin" : "de.codecentric:spring-boot-admin-starter-client:${boot_admin}",
            // skywalking 链路追踪
            "skywalking_logback" : "org.apache.skywalking:apm-toolkit-logback-1.x:${skywalking}",
            "skywalking_trace":"org.apache.skywalking:apm-toolkit-trace:${skywalking}",
            "devTools" : "org.springframework.boot:spring-boot-devtools",
            // gateway 网关
            "gateway": "org.springframework.cloud:spring-cloud-starter-gateway",
            "security_config": "org.springframework.security:spring-security-config",
            "loadbalancer": "org.springframework.cloud:spring-cloud-starter-loadbalancer",
            // 任务调度
            "job":"com.xuxueli:xxl-job-core:${job}",
            // jwt
            "jwt": "com.nimbusds:nimbus-jose-jwt:${jwt}",
            // 鉴权、认证
            "security": "org.springframework.boot:spring-boot-starter-security",
            "oauth2_config": "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure",
            "oauth2_client": "org.springframework.security:spring-security-oauth2-client",
            "jose": "org.springframework.security:spring-security-oauth2-jose",
            "rsa": "org.springframework.security:spring-security-rsa:${rsa}",
            "resource_server": "org.springframework.security:spring-security-oauth2-resource-server",
            // 文档聚合
            "springdoc" : "org.springdoc:springdoc-openapi-webmvc-core:${springdoc}",
            "knife4j_aggregation": "com.github.xiaoymin:knife4j-aggregation-spring-boot-starter:${knife4j}"

    ]
}

allprojects {
    group = 'io.nerv'
    version = '2.7.3C'
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'

	sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    dependencyManagement {
        imports {
            mavenBom "${lib.boot}"
            mavenBom "${lib.cloud}"
            mavenBom "${lib.alibaba}"
        }
    }
    
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
	
	tasks.withType(Javadoc) {
        options.encoding = "UTF-8"
		options.addStringOption('Xdoclint:none', '-quiet')
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url"https://repo1.maven.org/maven2" }
        maven { url"https://maven.aliyun.com/repository/central" }
        maven { url"https://maven.aliyun.com/repository/jcenter" }
        maven { url"https://mirrors.huaweicloud.com" }
        maven { url"https://maven.aliyun.com/repository/central" }
        maven { url"https://maven.aliyun.com/repository/spring" }
        maven { url"https://maven.aliyun.com/repository/spring-plugin" }
		maven { url"https://maven.springframework.org"}
        maven { url"https://repo.spring.io/libs-release" }
        google()
    }
    if (it.name != 'eva-dubbo-service') {

        dependencies {
            implementation "${lib.lombok}",
                           "${lib.nacos_config}",
                           "${lib.nacos_client}",
                           "${lib.bootAdmin}",
                           // spring cloud 2020以后的版本,默认不优先读取bootstrap.yml了;
                           // bootstrap.yml失效,导致nacos报错Param 'serviceName' is illegal, serviceName is blank
                           // 相关链接:https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#config-first-bootstrap
                           "${lib.cloud_bootstrap}"
    // 需要链路追踪的子项目需要引入此依赖
    //        "${lib.skywalking_logback}",
    //        "${lib.skywalking_trace}"

            annotationProcessor "${lib.lombok}"

            testImplementation "${lib.test}"

         }
    }

}

