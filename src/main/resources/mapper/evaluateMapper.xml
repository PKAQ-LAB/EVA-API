<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="io.nerv.web.evaluate.mapper.EvaluateMapper">
        <select id="monthNumberOne" resultType="map">
            select * from (
            <!--        最佳医生-->
                SELECT aa.USER_NAME docName,aa.satisfied/aa.total docScore from (
                    SELECT any_value(USER_NAME) USER_NAME,
                    COUNT(*) total,
                    SUM(CASE WHEN SCORE >=3 THEN 1 ELSE 0 END) satisfied
                    from bi_grade_detail
                    where #{endTime} >= GRADE_TIME and GRADE_TIME >= #{beginTime} and job = 1 GROUP BY USER_ID
                ) aa  order by docScore desc limit 1
            ) t1, (
            <!--        最佳护士-->
                SELECT aa.USER_NAME nurName,aa.satisfied/aa.total nurScore from (
                    SELECT any_value(USER_NAME) USER_NAME,
                    COUNT(*) total,
                    SUM(CASE WHEN SCORE >=3 THEN 1 ELSE 0 END) satisfied
                    from bi_grade_detail
                    where #{endTime} >= GRADE_TIME and GRADE_TIME >= #{beginTime}  and job = 2 GROUP BY USER_ID
                ) aa  order by nurScore desc limit 1
            ) t2, (
            <!--        最佳科室-->
                SELECT aa.OFFICE officeName,aa.satisfied/aa.total officeScore from (
                    SELECT OFFICE,
                    COUNT(*) total,
                    SUM(CASE WHEN SCORE >=3 THEN 1 ELSE 0 END) satisfied
                    from bi_grade_detail
                    where #{endTime} >= GRADE_TIME and GRADE_TIME >= #{beginTime}  GROUP BY OFFICE
                ) aa order by officeScore desc limit 1
            ) t3, (
    <!--        用户满意度-->
                SELECT aa.satisfied/aa.total userScore from (
                SELECT
                    COUNT(*) total,
                    SUM(CASE WHEN SCORE >=3 THEN 1 ELSE 0 END) satisfied
                    from bi_grade_detail
                    where #{endTime} >= GRADE_TIME and GRADE_TIME >= #{beginTime}
                    limit 1
                ) aa
            ) t4
        </select>

        <!-- 根据时间 按主治医师查询总分且排序 -->
        <select id="doctorTotalScoDe" resultType="io.nerv.web.evaluate.vo.EvaluateDoctorVo">
            SELECT any_value(USER_ID) id, any_value(USER_NAME) name, sum(SCORE) totalScore
            from bi_grade_detail
            where #{endTime} >= GRADE_TIME and GRADE_TIME >= #{beginTime} and job = 1
            GROUP BY USER_ID
            order by totalScore desc
        </select>

        <!-- 根据时间 按科室查询总分且排序 -->
        <select id="departmentTotalScoDe" resultType="io.nerv.web.evaluate.vo.EvaluateOffice">
            SELECT OFFICE name, sum(SCORE) totalScore
            from bi_grade_detail
            where #{endTime} >= GRADE_TIME and GRADE_TIME >= #{beginTime}
            GROUP BY OFFICE
            order by totalScore desc
        </select>

    <!-- 根据时间 按主治医师查询平均分 -->
    <select id="doctorAvgScoDe" resultType="io.nerv.web.evaluate.vo.EvaluateDoctorVo">
            select t1.id id, t1.name name, IFNULL(t2.avgScore,0) avgScore from bi_doctor t1 LEFT JOIN (
                SELECT any_value(USER_ID) id, any_value(USER_NAME) name, avg(SCORE) avgScore
                from bi_grade_detail
                where #{endTime} >= GRADE_TIME and GRADE_TIME >= #{beginTime} and job = 1
                GROUP BY USER_ID
            ) t2 on t1.id = t2.id
        </select>

    <!-- 根据时间 按科室查询平均分 -->
    <select id="departmentAvgScoDe" resultType="io.nerv.web.evaluate.vo.EvaluateOffice">
            select t1.name,IFNULL(t2.avgScore,0) avgScore from (
                select OFFICE_NAME name from bi_doctor
                UNION
                select OFFICE_NAME from bi_nurse
            ) t1 left join (
                SELECT OFFICE name, avg(SCORE) avgScore
                from bi_grade_detail
                where #{endTime} >= GRADE_TIME and GRADE_TIME >= #{beginTime}
                GROUP BY OFFICE
            ) t2 on t1.name = t2.name

        </select>

<!--        //    就诊人数/评价人数-->
        <select id="persionNum" resultType="map">
            select COUNT(DISTINCT t1.MAIN_ID) consultationNum, COUNT(DISTINCT t2.MAIN_ID) scoreNum
            from bi_patient2 t1,bi_grade_detail t2
            where
            #{endTime} >= t1.PAITENT_TIME and t1.PAITENT_TIME >= #{beginTime} and
            #{endTime} >= t2.GRADE_TIME and t2.GRADE_TIME >= #{beginTime}
        </select>

</mapper>